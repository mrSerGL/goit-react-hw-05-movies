{"version":3,"file":"static/js/580.f6df6b5b.chunk.js","mappings":"oQACA,EAA4B,wBAA5B,EAA2D,mBAA3D,EAA2F,yBAA3F,EAA6H,qBAA7H,EAA+J,yB,SCkE/J,EAxDa,WACX,OAAeA,EAAAA,EAAAA,UAAS,GAAjBC,GAAP,eACA,GAAoBD,EAAAA,EAAAA,UAASE,EAAAA,EAAAA,UAAtBC,GAAP,eACA,GAA0CH,EAAAA,EAAAA,UAAS,IAAnD,eAAOI,EAAP,KAAsBC,EAAtB,KACA,GAAaL,EAAAA,EAAAA,UAAS,IAAfM,GAAP,eAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAG,UAAMN,GAAN,OAAkBG,EAAlB,oBAAgCI,EAAAA,EAAhC,iBAAgDT,EAAhD,uCAaT,OAXAU,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAUH,GAAKI,MAAK,SAAAC,GACmB,IAAjCA,EAASC,KAAKC,QAAQC,QACxBC,EAAAA,OAAAA,QAAe,2CAGjBb,EAAiBS,EAASC,KAAKC,QAChC,GAEF,GAAE,KAGD,iCACE,4CAEA,eAAIG,UAAWC,EAAf,SAGKhB,EAAciB,KAAI,SAAAC,GAAK,OACxB,eAAmBH,UAAWC,EAA9B,UACE,UAAC,KAAD,CACEG,GAAI,CACFC,SAAS,UAAD,OAAYF,EAAMhB,IAC1BmB,MAAO,CAAEC,KAAMnB,IAEjBY,UAAWC,EALb,WAOE,gBACEO,MAAM,QACNC,IACEN,EAAMO,YAAN,0CACuCP,EAAMO,aACzCC,EAENC,IAAKT,EAAMU,MACXb,UAAWC,KAEb,iBAAMD,UAAWC,EAAjB,SAAkCE,EAAMU,YAlBnCV,EAAMhB,GADS,QA0BjC,C,kBC7DD,IAFgB,kC,oBCqBhB,IAtBuB,CACf2B,SAAU,sBACVC,YAAa,gBACbC,aAAc,UACdC,aAAc,WACdC,aAAc,W,8DCJtBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAM1B,EAAS,mCAAG,WAAMH,GAAN,gGAEE6B,EAAAA,EAAAA,IAAA,UAAa7B,IAFf,cAEfK,EAFe,yBAIdA,GAJc,gCAMrByB,QAAQC,IAAI,kBAAZ,MANqB,yDAAH,sDAUtB,K","sources":["webpack://react-homework-template/./src/components/Home/Home.module.css?58dd","components/Home/Home.js","services/API_KEY.js","services/END_POINTS.js","services/getMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"Home_movieList__dew6t\",\"link\":\"Home_link__nk6bm\",\"moviesItem\":\"Home_moviesItem__sLS+C\",\"poster\":\"Home_poster__EoW+s\",\"movieTitle\":\"Home_movieTitle__Zx60k\"};","import { Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport getMovies from 'services/getMovies';\nimport noImage from '../../images/no_image.jpg';\nimport END_POINTS from '../../services/END_POINTS';\nimport API_KEY from '../../services/API_KEY';\n\nimport css from './Home.module.css';\n\nconst Home = () => {\n  const [page] = useState(1);\n  const [end_point] = useState(END_POINTS.trending);\n  const [moviesInTrend, setmoviesInTrend] = useState([]);\n  const [id] = useState('');\n\n  const location = useLocation();\n\n  const url = `${end_point}${id}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`;\n\n  useEffect(() => {\n    getMovies(url).then(response => {\n      if (response.data.results.length === 0) {\n        Notify.failure('Please check the request and try again!');\n      }\n\n      setmoviesInTrend(response.data.results);\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n\n      <ul className={css.movieList}>\n\n\n          {moviesInTrend.map(movie => (\n          <li key={movie.id} className={css.moviesItem}>\n            <Link\n              to={{\n                pathname: `movies/${movie.id}`,\n                state: { from: location },\n              }}\n              className={css.link}\n            >\n              <img\n                width=\"250px\"\n                src={\n                  movie.poster_path\n                    ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                    : noImage\n                }\n                alt={movie.title}\n                className={css.poster}\n              />\n              <span className={css.movieTitle}>{movie.title}</span>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Home;\n","// https://developer.themoviedb.org/reference/\n// SerG683708  SerG683708\nconst API_KEY = '487147f1f35b8dc05ecb62d6b1edb1cd';\n\nexport default API_KEY;","\n    const END_POINTS = {\n        trending: '/trending/movie/day',\n        querySearch: '/search/movie',\n        movieDetails: '/movie/',\n        movieCredits: '/credits',\n        movieReviews: '/reviews',\n      };\n\n//trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n\n//search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\n\n//movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\n\n//movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\n\n//movies/get-movie-reviews запрос обзоров для страницы кинофильма.\n\n\n\n\n\nexport default END_POINTS;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovies = async url => {\n  try {\n    const response = await axios.get(`${url}`);\n\n    return response;\n  } catch (error) {\n    console.log('getMovies says:', error);\n  }\n};\n\nexport default getMovies;\n"],"names":["useState","page","END_POINTS","end_point","moviesInTrend","setmoviesInTrend","id","location","useLocation","url","API_KEY","useEffect","getMovies","then","response","data","results","length","Notify","className","css","map","movie","to","pathname","state","from","width","src","poster_path","noImage","alt","title","trending","querySearch","movieDetails","movieCredits","movieReviews","axios","console","log"],"sourceRoot":""}